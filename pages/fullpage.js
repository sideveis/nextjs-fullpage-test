import ReactFullpage from "@fullpage/react-fullpage";
import { motion, useInView } from "framer-motion";
import Head from "next/head";
import Script from "next/script";
import { useRef, useState } from "react";

const SectionInFullpage = ({ index, title, body, fullpageprops }) => {
    const isInView = fullpageprops?.state?.destination?.index === index

    return (
        <div className="section">
            <motion.div
                animate={{ opacity: isInView ? 1 : 0 }}
                transition={{ delay: isInView ? 0.3 : 0, duration: 1 }}
                style={{
                    opacity: isInView ? 1 : 0,
                }}
                className="p-20 text-center text-2xl"><div className="font-bold text-7xl">{title}</div>{body}</motion.div>
        </div>
    )
}

export default function Fullpage() {

    const sectionsColor = ['#0798ec', '#fc6c7c', '#435b71', 'orange', 'blue', 'purple', 'yellow'];

    const [hideMenu, setHideMenu] = useState(false);
    const [currentBgColor, setCurrentBgColor] = useState(sectionsColor[0]);

    const fullpages = [
        {
            id: 1,
            text: "Section 1"
        },
        {
            id: 2,
            text: "Section 2"
        },
        {
            id: 3,
            text: 'Section 3',
        },
        {
            id: 4,
            text: 'Footer content',
        },
    ]


    return (
        <>

            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Script src="https://cdn.tailwindcss.com" strategy="beforeInteractive" />

            <ReactFullpage
                verticalCentered={false}
                sectionsColor={sectionsColor}
                anchors={['section1', 'section2', 'section3', 'section4']}
                //scrollBar={true}
                scrollingSpeed={1200}
                onLeave={(origin, destination, direction) => {
                    if (destination.isLast) {
                        setHideMenu(true);
                    }

                    setCurrentBgColor(sectionsColor[destination.index]);

                    //console.log("onLeave", destination.isLast, destination, direction)
                }}
                afterLoad={(origin, destination, direction) => {
                    if (origin.isLast) {
                        setHideMenu(false);
                    }
                    //console.log("afterLoad", destination.isLast, direction)
                }}
                render={comp =>
                (
                    <ReactFullpage.Wrapper>
                        <div className="section"><div className="p-20 text-center text-2xl"><div className="font-bold text-7xl">A</div>section</div></div>
                        <SectionInFullpage index={1} title="B" body="section" fullpageprops={comp} />
                        <div className="section"><div className="p-20 text-center text-2xl"><div className="font-bold text-7xl">C</div>section</div></div>

                        <div className="section">
                            <div className="min-h-screen"><div className="p-20 text-center text-2xl"><div className="font-bold text-5xl">Footer</div><div>Her forsvinner navigation ðŸ‘‡</div></div></div>
                        </div>


                    </ReactFullpage.Wrapper>
                )
                }
            />

            <motion.div
                animate={{ y: hideMenu ? 200 : 0, backgroundColor: currentBgColor }}
                transition={{ duration: 0.6 }}
                className="fixed p-10 bottom-0 left-0 right-0 z-1 text-center border-t">
                <div>Navigation <a className="ml-10" href="#section2">GÃ¥ til slide #2</a> <a className="ml-10" href="#section4">GÃ¥ til footer #4</a></div>
            </motion.div>

        </>
    )
}
